Exercises:: Comandos Utilizados para los Ejercicios

1.1. Create a directory first_dir in my home folder

 --> mkdir first_dir :: mkdir crea un directorio 

1.2. Create an empty file text_file.txt inside first_dir directory

 --> cd first_dir
 --> touch text_file.txt
 o 
 --> touch fist_dir/text_file.txt
 :::::::: touch crea un fichero vacio con un nombre especifico
 
1.3. Add execute permissions to group users, and write permissions to other users to text_file.txt

 :::::::: Este ejercicio se puede hacer de varias formas, ya que el comando chmod que da
 :::::::: permisos a los ficheros de lectura escritura y ejecucion rwx a los distintos
 :::::::: tipos de usuarios, admite distintos tipos de parametros.
 :::::::: Podemos decirle que tipos queremos
 --> chmod u=rwx, g=rwx, o=rw file :: Daría permisos de rwx al usuario creador y al grupo
                                   :: pero a otros solo rw.
 :::::::: O podemos decirle los permisos con codigo binario:
 --> chmod 731 file  :: Daría permisos rwx a todos
 
 :::::::: Los permisos binarios van de la siguiente manera
 				Tenemos 3 numeros, en el ejemplo 7 3 1
				 el primero representa al usuario, 7
				 el segundo a grupos 3
				 y el tercero a otros 1
				 el 7 en binario es 111
				 el 3 es 110
				 y el 1 es 100
				 (otros ejemplos serian el 2 010 o el 6 011)
				 entonces, cada posicion --- representa un permiso rwx,
				  si la primera posicion es un 1 significa que tiene permisos de lectura r
				  y si es un 0 que no los tiene, (igual para los siguientes)
				en nuestro ejempo chmod 731 es igual a chmod u=rwx, g=rw, o=r
				
1.4. Create 3 subdirectories inside first_dir: sub1, sub2, sub3

 --> mkdir sub1 sub2 sub3 :: A mkdir podemos decirle todos los ficheros que queremos crear

1.5.Copy the text_file.txt file into sub1 directory

 --> cp text_file.txt sub1/   :: cp copia un directorio cp a b copia a en b, tambien funciona para cambiarle el nombre

1.6. Move the text_file.txt into sub2 under name text_file.txt.2
 --> mv text_file.txt sub2/text_file.txt.2    :: mv a b mueve el fichero a a b, b puede ser otro fichero 
 											  :: y simplemente le cambia el nombre, o puede ser un directorio 
											  :: y lo mueve con el mismo nombre

1.7. Copy the whole directory sub1 to sub3 directory
 --> cp -r sub1 sub3   :: -r significa que lo haga recursivo, es decir, que copie tambien el interior

1.8. Change file name of first_dir/sub2/text_file.txt.2 to first_dir/sub2/text_file.txt.backup
 :::::::: Hagamoslo desde el home
 --> cd ~ 
 --> mv first_dir/sub2/text_file.txt.2 first_dir/sub2/text_file.txt.backup

1.9. Move first_dir/sub2/text_file.txt.backup to first_dir directory as hidden file
 :::::::: Desde el home

 --> mv first_dir/sub2/text_file.txt.backup first_dir/.text_file_.txt.backup    :: . antes del nombre es para ocultarlo
1.10. Delete the sub3 subdirectory
 :::::::: Desde el home

--> rm -r first_dir/sub3      :: rm -r borra un directorio y su interior, rm borra un fichero
